{
  "info": {
    "name": "Users API Data-Driven Tests",
    "description": "Data-driven tests for Users API using CSV test data",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "POST /users/login - Data-Driven Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedStatus = parseInt(pm.iterationData.get('expected_status'));",
              "const testScenario = pm.iterationData.get('test_scenario');",
              "const description = pm.iterationData.get('test_description');",
              "const email = pm.iterationData.get('email');",
              "",
              "pm.test(`${description} - Status Code`, function () {",
              "    pm.expect(pm.response.code).to.equal(expectedStatus);",
              "});",
              "",
              "pm.test(`${description} - Response Time`, function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(10000);",
              "});",
              "",
              "pm.test(`${description} - Content Type`, function () {",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
              "});",
              "",
              "if (expectedStatus === 200) {",
              "    pm.test(`${description} - Successful Login Response`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.have.property('access_token');",
              "        pm.expect(json).to.have.property('token_type');",
              "        pm.expect(json.token_type.toLowerCase()).to.equal('bearer');",
              "        pm.expect(json.access_token).to.be.a('string');",
              "        pm.expect(json.access_token.length).to.be.greaterThan(10);",
              "    });",
              "    ",
              "    pm.test(`${description} - Store Token`, function () {",
              "        const json = pm.response.json();",
              "        if (email === 'admin@practicesoftwaretesting.com') {",
              "            pm.environment.set('admin_token', json.access_token);",
              "        } else {",
              "            pm.environment.set('user_token', json.access_token);",
              "        }",
              "    });",
              "} else {",
              "    pm.test(`${description} - Error Response Structure`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.have.property('message');",
              "    });",
              "    ",
              "    if (expectedStatus === 422) {",
              "        pm.test(`${description} - Validation Error Details`, function () {",
              "            const json = pm.response.json();",
              "            pm.expect(json).to.have.property('errors');",
              "        });",
              "    }",
              "}",
              "",
              "console.log(`Test: ${testScenario}, Email: ${email}, Expected: ${expectedStatus}, Actual: ${pm.response.code}`);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {"key": "Accept", "value": "application/json"},
          {"key": "Content-Type", "value": "application/json"}
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"email\": \"{{email}}\", \"password\": \"{{password}}\"}"
        },
        "url": {
          "raw": "{{base_url}}/users/login",
          "host": ["{{base_url}}"],
          "path": ["users", "login"]
        }
      }
    }
  ]
}
