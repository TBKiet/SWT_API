{
  "info": {
    "name": "Brands API Data-Driven Tests",
    "description": "Data-driven tests for Brands API using CSV test data",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "GET /brands - Data-Driven Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedStatus = parseInt(pm.iterationData.get('expected_status'));",
              "const testScenario = pm.iterationData.get('test_scenario');",
              "const description = pm.iterationData.get('test_description');",
              "",
              "pm.test(`${description} - Status Code`, function () {",
              "    pm.expect(pm.response.code).to.equal(expectedStatus);",
              "});",
              "",
              "pm.test(`${description} - Response Time`, function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(10000);",
              "});",
              "",
              "if (expectedStatus === 200) {",
              "    pm.test(`${description} - Valid Response Structure`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.be.an('array');",
              "        pm.expect(json.length).to.be.greaterThan(0);",
              "    });",
              "    ",
              "    pm.test(`${description} - Content Type`, function () {",
              "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
              "    });",
              "} else {",
              "    pm.test(`${description} - Error Response`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.have.property('message');",
              "    });",
              "}",
              "",
              "console.log(`Test Scenario: ${testScenario}, Expected: ${expectedStatus}, Actual: ${pm.response.code}`);"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {"key": "Accept", "value": "application/json"}
        ],
        "url": {
          "raw": "{{base_url}}/brands",
          "host": ["{{base_url}}"],
          "path": ["brands"]
        }
      }
    }
  ]
}
